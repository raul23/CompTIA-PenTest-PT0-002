==============================
CompTIA PenTest+: Exam PT0-002
==============================
Resources for CompTIA PenTest+ (PT0-002) and related topics

`PenTest+`_ is an intermediate-level certification focusing on penetration testing. [1]_ PenTest+ covers risk analysis, threat detection, and penetration testing and ethical hacking tools and methodologies.

.. contents:: **Contents**
   :depth: 3
   :local:
   :backlinks: top

Exam Details (PT0-002)
======================
- **Exam Code:** PT0-002
- **Launch Date:** October 28, 2021
- **Number of questions:** 85
- **Length of test:** 165 minutes
- **Passing score:** 750 on a scale of 100-900
- **Type of Questions:** Multiple choice and `performance-based questions`_ (PBQs)
- **Recommended experience:** 

  - CompTIA Network+, Security+ or equivalent knowledge. 
  - Minimum of 3-4 years of hands-on information security or related experience.
- **Languages:** English, Japanese
- **Retirement:** Usually three years after launch

`:information_source:` `Try a sample PBQs`_

|

`:warning:` **Launch and expiration dates of the PT0-001 and PT0-002 exams**

 - **PT0-001** was released on July 31, 2018 and the English and Japanese versions already expired on April 26, 2022
   and January 31, 2023, respectively.
 - **PT0-002** was released on October 28, 2021. Usually the CompTIA certifications expire three years after launch.
   Thus probably around October 28, 2024, PT0-002 will expire.

**Ref.:** [2]_

Books
=====
- Linn, Heather. `CompTIA PenTest+ Certification_ All-in-One Exam Guide (Exam PT0-002)`_. 2nd ed., McGraw-Hill, 2022.

.. 4.6, 20

- Clarke, Glen E. `CompTIA Pentest+ Certification For Dummies`_. 2nd ed., 2022.

.. 4.4, 7

Related certifications
======================
- **EC-Council Certified Ethical Hacker) (CEH)**

  * `Official website <https://www.eccouncil.org/programs/certified-ethical-hacker-ceh/>`_
  * `Certified Ethical Hacker (CEH)`_ (Wikipedia)
- **GIAC Penetration Tester (GPEN)**

  * `Official website <https://www.giac.org/certifications/penetration-tester-gpen/>`_
  * `Global Information Assurance Certification (GIAC)`_ (Wikipedia)
- **Offensive Security Certified Professional (OSCP)**

  * `Official website <https://www.offensive-security.com/courses/pen-200/>`_
  * `Offensive Security Certified Professional (OSCP)`_ (Wikipedia)
  
|

**Comparisons between related certifications:**

.. image:: ./images/comparisons.png
   :target: ./images/comparisons.png
   :align: left
   :alt: Comparisons between related certifications

Image taken from `comptia.org`_

Videos
======
* `"CompTIA PenTest+\: Everything you need to know about the exam | Infosec Edge Webcast" (Infosec)`_. YouTube, Dec 9, 2021.

   Join Patrick Lane, Director of Products at CompTIA, to get the inside scoop on the latest PenTest+ changes
   
  * Total Running Time: 57 minutes

* `"CompTIA PenTest+ Full Course - FREE [11 Hours] PT0-002" (Paul Browning)`_. YouTube, Jan 9, 2023.

  * Total Running Time: 11 hours 32 minutes

  |

   A complete course featuring theory and follow-along labs.
  
   00:00:00 - The CompTIA Pentest+ Exam
   00:11:27 - Pentesting

   **Module 2 - Planning and Scoping**

   00:37:20 - Explain the Importance of Planning for an Engagement.
   01:28:06 - Explain Key Legal Concepts

   **Module 3 - Information Gathering**

   01:48:55 - Passive Information Gathering, Reconnaissance and Enumeration
   02:07:52 - Passive Information Gathering Tools
   02:29:31 - Reconnaissance Tools

   **Module 4 - Vulnerability Scanning**

   03:04:28 - Vulnerability Management
   03:22:14 - Vulnerability Scan Tools

   **Module 5 - Vulnerability Analysis**

   04:11:19 - Interpreting Vulnerabilities Reports

   **Module 6 - Exploits**

   04:55:40 - Exploit Types
   05:20:37 - Metasploitable and Exploits DBs
   05:32:37 - The Metasploit Framework

   **Module 7 - Exploiting Networks**

   05:54:22 - Network Exploits
   06:27:42 - NetBIOS Exploits
   06:38:58 - Wireless Exploits
   06:50:38 - Some Network Exploitation Tools

   **Module 8 - Exploiting People**

   07:15:41 - Social Engineering
   07:34:00 - Social Engineering Toolkit

   **Module 9 - Exploiting Applications**

   07:49:27 - Exploiting Applications
   08:24:18 - Injection Tools

   **Module 10 - Exploiting Hosts**

   08:41:13 - Special Permission Bits in Linux
   09:08:11 - Exploiting Windows Hashes and Kernel
   09:35:27 - Exploiting Linux Kernels

   **Module 11 - Using and Writing Pentesting Scripts**

   10:02:15 - Scripting in Bash, Powershell, Python and Ruby

   **Module 12 - Reporting**

   10:53:21 - Reporting and Monitoring

.. URLs videos
.. _"CompTIA PenTest+\: Everything you need to know about the exam | Infosec Edge Webcast" (Infosec): https://www.youtube.com/watch?v=P_D7BCpxkS4
.. _"CompTIA PenTest+ Full Course - FREE [11 Hours] PT0-002" (Paul Browning): https://www.youtube.com/watch?v=WczBlBjoQeI

Commands
========
- ``hashdump``: **Meterpreter** command for retrieving password hashes from a target

  .. code-block::

     meterpreter > run hashdump
     
     [*] Obtaining the boot key...
     [*] Calculating the hboot key using SYSKEY 8528c78df7ff55040196a9b670f114b6...
     [*] Obtaining the user list and keys...
     [*] Decrypting user keys...
     [*] Dumping password hashes...
     
  `:information_source:` References  
  
   - https://www.offensive-security.com/metasploit-unleashed/meterpreter-basics/
   - https://docs.rapid7.com/metasploit/manage-meterpreter-and-shell-sessions/
   - https://en.wikibooks.org/wiki/Metasploit/MeterpreterClient#use
   - https://www.oreilly.com/library/view/metasploit-revealed-secrets/9781788624596/e1d79ad3-0ba0-41e4-9082-9590cfa0089e.xhtml

Tools
=====
- `Hydra`_: is a parallelized login cracker which supports numerous protocols to attack (see also https://www.kali.org/tools/hydra/).

  .. code-block::
  
      root@kali:~# hydra -h
      Hydra v9.4 (c) 2022 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).

      Syntax: hydra [[[-l LOGIN|-L FILE] [-p PASS|-P FILE]] | [-C FILE]] [-e nsr] [-o FILE] [-t TASKS] [-M FILE [-T TASKS]] [-w TIME] [-W TIME] [-f] [-s PORT] [-x MIN:MAX:CHARSET] [-c TIME] [-ISOuvVd46] [-m MODULE_OPT] [service://server[:PORT][/OPT]]

      Options:
        -R        restore a previous aborted/crashed session
        -I        ignore an existing restore file (don't wait 10 seconds)
        -S        perform an SSL connect
        -s PORT   if the service is on a different default port, define it here
        -l LOGIN or -L FILE  login with LOGIN name, or load several logins from FILE
        -p PASS  or -P FILE  try password PASS, or load several passwords from FILE
        -x MIN:MAX:CHARSET  password bruteforce generation, type "-x -h" to get help
        -y        disable use of symbols in bruteforce, see above
        -r        use a non-random shuffling method for option -x
        -e nsr    try "n" null password, "s" login as pass and/or "r" reversed login
        -u        loop around users, not passwords (effective! implied with -x)
        -C FILE   colon separated "login:pass" format, instead of -L/-P options
        -M FILE   list of servers to attack, one entry per line, ':' to specify port
        -o FILE   write found login/password pairs to FILE instead of stdout
        -b FORMAT specify the format for the -o FILE: text(default), json, jsonv1
        -f / -F   exit when a login/pass pair is found (-M: -f per host, -F global)
        -t TASKS  run TASKS number of connects in parallel per target (default: 16)
        -T TASKS  run TASKS connects in parallel overall (for -M, default: 64)
        -w / -W TIME  wait time for a response (32) / between connects per thread (0)
        -c TIME   wait time per login attempt over all threads (enforces -t 1)
        -4 / -6   use IPv4 (default) / IPv6 addresses (put always in [] also in -M)
        -v / -V / -d  verbose mode / show login+pass for each attempt / debug mode 
        -O        use old SSL v2 and v3
        -K        do not redo failed attempts (good for -M mass scanning)
        -q        do not print messages about connection errors
        -U        service module usage details
        -m OPT    options specific for a module, see -U output for information
        -h        more command line options (COMPLETE HELP)
        server    the target: DNS, IP or 192.168.0.0/24 (this OR the -M option)
        service   the service to crack (see below for supported protocols)
        OPT       some service modules support additional input (-U for module help)

      Supported services: adam6500 asterisk cisco cisco-enable cobaltstrike cvs firebird ftp[s] http[s]-{head|get|post} http[s]-{get|post}-form http-proxy http-proxy-urlenum icq imap[s] irc ldap2[s] ldap3[-{cram|digest}md5][s] memcached mongodb mssql mysql nntp oracle-listener oracle-sid pcanywhere pcnfs pop3[s] postgres radmin2 rdp redis rexec rlogin rpcap rsh rtsp s7-300 sip smb smtp[s] smtp-enum snmp socks5 ssh sshkey svn teamspeak telnet[s] vmauthd vnc xmpp

      Hydra is a tool to guess/crack valid login/password pairs.
      Licensed under AGPL v3.0. The newest version is always available at;
      https://github.com/vanhauser-thc/thc-hydra
      Please don't use in military or secret service organizations, or for illegal
      purposes. (This is a wish and non-binding - most such people do not care about
      laws and ethics anyway - and tell themselves they are one of the good ones.)
      These services were not compiled in: afp ncp oracle sapr3 smb2.

      Use HYDRA_PROXY_HTTP or HYDRA_PROXY environment variables for a proxy setup.
      E.g. % export HYDRA_PROXY=socks5://l:p@127.0.0.1:9150 (or: socks4:// connect://)
           % export HYDRA_PROXY=connect_and_socks_proxylist.txt  (up to 64 entries)
           % export HYDRA_PROXY_HTTP=http://login:pass@proxy:8080
           % export HYDRA_PROXY_HTTP=proxylist.txt  (up to 64 entries)

      Examples:
        hydra -l user -P passlist.txt ftp://192.168.0.1
        hydra -L userlist.txt -p defaultpw imap://192.168.0.1/PLAIN
        hydra -C defaults.txt -6 pop3s://[2001:db8::1]:143/TLS:DIGEST-MD5
        hydra -l admin -p password ftp://[192.168.0.0/24]/
        hydra -L logins.txt -P pws.txt -M targets.txt ssh

Websites
========
- Official website: `CompTIA PenTest+ Certification`_
- **Wikipedia articles**
  
  * `CompTIA`_
- `Kali Linux`_: Installer images or Virtual Machines (e.g. VirtualBox)

References
==========
.. [1] https://en.wikipedia.org/wiki/CompTIA#Professional_level_certifications
.. [2] https://www.comptia.org/certifications/pentest

.. URLs
.. _PenTest+: https://www.comptia.org/certifications/pentest
.. _Kali Linux: https://www.kali.org/get-kali/#kali-platforms

.. URLs test details
.. _comptia.org: https://www.comptia.org/certifications/pentest#examdetails
.. _performance-based questions: https://www.comptia.org/testing/testing-options/about-comptia-performance-exams/performance-based-questions-explained
.. _Try a sample PBQs: https://simulation.comptia.org/

.. URLs books
.. _CompTIA PenTest+ Certification_ All-in-One Exam Guide (Exam PT0-002): 
   https://www.amazon.com/CompTIA-PenTest-Certification-Second-PT0-002/dp/1264274890
.. _CompTIA Pentest+ Certification For Dummies: https://www.amazon.com/CompTIA-Pentest-Certification-Dummies-Computer/dp/1119867274

.. URLs Related certifications
.. _Certified Ethical Hacker (CEH): https://en.wikipedia.org/wiki/Certified_Ethical_Hacker
.. _Global Information Assurance Certification (GIAC): https://en.wikipedia.org/wiki/Global_Information_Assurance_Certification
.. _Offensive Security Certified Professional (OSCP): https://en.wikipedia.org/wiki/Offensive_Security_Certified_Professional

.. URLs tools
.. _Hydra: https://github.com/vanhauser-thc/thc-hydra

.. URLs websites
.. _CompTIA: https://en.wikipedia.org/wiki/CompTIA
.. _CompTIA PenTest+ Certification: https://www.comptia.org/certifications/pentest
